name: terraform-deploy-all

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      ###################################################
      # MODULE 1: terraform-preinfra
      ###################################################
      - name: Terraform Init (preinfra)
        run: terraform init -reconfigure
        working-directory: terraform-skillnest/terraform-preinfra

      - name: Terraform Refresh (preinfra)
        run: terraform refresh -var="artifacts_bucket_name=arka-dev-artifacts" -var="environment=dev" -var="project=arka"
        working-directory: terraform-skillnest/terraform-preinfra

      - name: Terraform Plan (preinfra)
        run: terraform plan -input=false -lock-timeout=60s -out=tfplan.binary -var="artifacts_bucket_name=arka-dev-artifacts" -var="environment=dev" -var="project=arka"
        working-directory: terraform-skillnest/terraform-preinfra

      - name: Terraform Apply (preinfra)
        run: terraform apply -input=false -auto-approve tfplan.binary
        working-directory: terraform-skillnest/terraform-preinfra
        continue-on-error: true

      ###################################################
      # MODULE 2: terraform-db
      ###################################################
      - name: Terraform Init (db)
        run: terraform init -reconfigure
        working-directory: terraform-skillnest/terraform-db

      - name: Terraform Refresh (db)
        run: terraform refresh -var="environment=dev" -var="project=arka" -var="db_identifier=arka-dev-db" -var="db_username=${{ secrets.DB_USERNAME }}" -var="db_password=${{ secrets.DB_PASSWORD }}" -var="db_name=arkadb" -var="vpc_id=vpc-0513a9bab7a11e39e" -var='subnet_ids=["subnet-07a322f484b9f962","subnet-09ee219f4838cb06f"]'
        working-directory: terraform-skillnest/terraform-db

      - name: Terraform Plan (db)
        run: terraform plan -input=false -lock-timeout=60s -out=tfplan.binary -var="environment=dev" -var="project=arka" -var="db_identifier=arka-dev-db" -var="db_username=${{ secrets.DB_USERNAME }}" -var="db_password=${{ secrets.DB_PASSWORD }}" -var="db_name=arkadb" -var="vpc_id=vpc-0513a9bab7a11e39e" -var='subnet_ids=["subnet-07a322f484b9f962","subnet-09ee219f4838cb06f"]'
        working-directory: terraform-skillnest/terraform-db

      - name: Terraform Apply (db)
        run: terraform apply -input=false -auto-approve tfplan.binary
        working-directory: terraform-skillnest/terraform-db
        continue-on-error: true

      ###################################################
      # MODULE 3: terraform-api-ecs
      ###################################################
      - name: Terraform Init (api-ecs)
        run: terraform init -reconfigure
        working-directory: terraform-skillnest/terraform-api-ecs

      - name: Terraform Refresh (api-ecs)
        run: terraform refresh -var="environment=dev" -var="project=arka" -var="db_r2dbc_url=${{ secrets.DB_R2DBC_URL }}" -var="db_jdbc_url=${{ secrets.DB_JDBC_URL }}" -var="db_username=${{ secrets.DB_USERNAME }}" -var="db_password=${{ secrets.DB_PASSWORD }}" -var="jwt_secret=${{ secrets.JWT_SECRET }}"
        working-directory: terraform-skillnest/terraform-api-ecs

      - name: Terraform Plan (api-ecs)
        run: terraform plan -input=false -lock-timeout=60s -out=tfplan.binary -var="environment=dev" -var="project=arka"
        working-directory: terraform-skillnest/terraform-api-ecs

      - name: Terraform Apply (api-ecs)
        run: terraform apply -input=false -auto-approve tfplan.binary
        working-directory: terraform-skillnest/terraform-api-ecs
        continue-on-error: true
